#---------- Easy ----------#

class Almira:                                       # Создаем класс Almira и инициализацию
    def __init__(self, name: str, age: int) -> None:
        self.name = name                            # При инициализаций принимается имя и возраст
        self.age = age

    def show_name(self) -> None:                    # Метод чтобы показать имя 
        if self.name.lower() == "альмира":          # Если имя это Альмира
            print(self.name.capitalize())           # Выводим имя, нормализируя через метод capitalize()
        else:
            print(f"Я не {self.name}, а Альмира")   # Иначе выводим что с именем что то не так


n, a = input().split()                              # Принимаем два значения с консоли
obj = Almira(n, int(a))                             # Создаем объект класса и передаем данные с консоли два значения
obj.show_name()                                     # Вызываем метод для показа имени





#---------- Medium ----------#

class Soda:                                         # Создаем класс Soda и инициализацию
    def __init__(self, taste="") -> None:           # Инициализация принимаем один опциональный параметр {ДОБАВКА}
        self.taste = taste                          # Сохраняем добавку в атрибут taste и создаем список добавок нашей газировки 
        self.taste_list = ["малина", "клубника", "кола", "мохито"]

    def show_my_drink(self) -> None:                # Метод для показа газировки
                                                    # Если добавка так и остался пустой строкой или добавки нет в нашем списке
        if self.taste == "" or self.taste not in self.taste_list:
            print("Обычная газировка")              # В таком случае подаем обычную газировку
        else:                                       # Иначе есть добавка 
            print(f"Газировка и {self.taste}")      # Подаем газировку с добавкой 


s1 = Soda("малина")             # Создаем 3 объекта класса Soda, с разными параметрами 
s2 = Soda()
s3 = Soda("банан")

s1.show_my_drink()              # Вызываем метод show_my_drink() для всех троих
s2.show_my_drink()
s3.show_my_drink()





#---------- Hard ----------#

class Triangle:                                     # Создаем класс Triangle
    def __init__(self, a, b, c) -> None:            # Инизиализация принимаем 3 значения
        self.a = a                                  # Эти 3 значения будут 3-мя сторонами треугольника
        self.b = b 
        self.c = c

    def is_it_triangle(self) -> None:               # Метод чтобы узнать получиться ли треугольник из трех атрибутов
        try:                                        # Первым делом попробуем всё конвертировать в число
            self.a, self.b, self.c = float(self.a), float(self.b), float(self.c)
        except ValueError:                          # Если возникнет исключение ValueError, значит одно из значений не является не числом
            print("Нужно вводить только числа!")
            return                                  # Выдаем ответ и завершаем функцию
        
                                                    # Если функция продолжилась, значит все три атрибута конвертировались в число
        if self.a < 0 or self.b < 0 or self.c < 0:  # в таком случае проверяем на отрицательность 
            print("С отрицательными числами ничего не выйдет!")
            return                                  # Если одно из значении отрицательны, то выдаем ответ и завершаем функцию
        
                                                    # Опять же если функция продолжилась, значит у нас все числа не отрицательны
                                                    # Тогда нужно проверить чтобы сумма двух сторон было больше третьего                 
        if (self.a + self.b > self.c) and (self.b + self.c > self.a) and (self.a + self.c > self.b):
            print("Ура, можно построить треугольник!")              # Если так то можно построить треугольник
        else:
            print("Жаль, но из этого треугольник не сделать.")      # Иначе нет



a, b, c = input().split()           # Принимаем три значения с консоли

t1 = Triangle(a, b, c)              # Составляем из них объект класса Triangle
t1.is_it_triangle()                 # И воспользуемся методом is_it_triangle()