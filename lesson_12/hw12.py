#---------- Easy A ----------#

a, b = list(map(int, input().split()))      # Приняли два числа списком и распокавали их по двум переменным
res = {}                                    # Словарь где само число будет ключом, а его квадрат значением

for num in range(a, b+1):                   # Рассматриваем все числа между [a, b]

    res[num] = num**2                       # Число указываем как ключ, значение квадрат числа

print(res)





#---------- Easy B ----------#

d = {
    "OOP": [77, 88, 99, 66],
    "ICT": [100, 98, 99, 96]
}

for subject, points in d.items():       # Итерируем ключи(предмет) и значения(оценки по этому предмету)
    # points является списком оценок
    for p in points:                    # Итерируем его элементы
        print(subject+":", p)           # Выводим предмет с двоеточием и оценку из списка





#---------- Medium A ----------#

words = input().split()                         # Принимаем список слов
word_count = {}                                 # Словарь где ключи будут словом а значение количество втречаемости этого слова

for word in words:                              # Итерируем слова в списке 

    if word not in word_count.keys():           # Если слово не встречался ранее в ключах
        print(0, end=" ")                       # То слово мы видим впервые, ранее он встречался ноль раз
        word_count[word] = 1                    # Но теперь один раз

    else:                                       # Иначе это слово мы ранее видели и у нас в словаре есть его количество
        print(word_count[word], end=" ")        # Выводим из словаря его текущее количество
        word_count[word] += 1                   # Но потом добавим новое количество





#---------- Medium B ----------#

sentence = input()                              # Принимаем предложение одной строкой
symbol_count = dict.fromkeys(sentence, 0)       # Из всех символов строки будут созданы ключи

for symbol in sentence:                         # Итерируем каждый символ в строке sentence
    symbol_count[symbol] += 1                   # Будем каждому символу добавлять в количество 1 каждый раз как встретиться по ходу итераций

print(symbol_count)


#---------- Hard A ----------#

cities = {}                                     # Словарь где страна будет ключом, а значение это список городов этой страны

n = int(input())                                # Принимаем количество вводов
for i in range(n):                              # Цикл на n раз
    x = input().split()                         # Принимаем список строк
    country = x[0]                              # Нулевая строка из списка это страна
    cities2 = set(x[1: ])                       # А остальные это города

    cities[country] = cities2                   # Страну как ключ, города как значение добавили в словарь


n = int(input())                                # Принимаем количество вводов
for i in range(n):                              # Цикл на n раз
    city = input()                              # Принимаем город

    for country, cities3 in cities.items():     # Итерируем словарь
        if city in cities3:                     # Если город который ввел пользователь есть в списке городов
            print(country)                      # То мы нашли нужную страну






#---------- Hard B ----------#

syn = {}                                # Словарь где ключом будет слово, значение синоним этого слова

n = int(input())                        # Принимаем количество вводов
for i in range(n):                      # Цикл на n раз
    word_a, word_b = input().split()    # Принимаем два слова

    syn[word_a] = word_b                # Первое слово синоним ко второму
    syn[word_b] = word_a                # а второй к первому


word = input()                          # Принимаем одно слово
print(syn[word])                        # Подставив его как ключ, берём значение(а в значениях синоним этого слова)